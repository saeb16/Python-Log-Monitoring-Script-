import re
import smtplib
from email.mime.text import MIMEText
from datetime import datetime

# Define a function to send an email alert
def send_alert(subject, message):
    sender_email = "your_email@example.com"
    receiver_email = "admin@example.com"
    password = "your_password"
    
    msg = MIMEText(message)
    msg['Subject'] = subject
    msg['From'] = sender_email
    msg['To'] = receiver_email

    # Establish a secure session with the email server
    with smtplib.SMTP_SSL('smtp.example.com', 465) as server:
        server.login(sender_email, password)
        server.sendmail(sender_email, receiver_email, msg.as_string())

# Function to monitor log for suspicious activity
def monitor_logs(log_file):
    with open(log_file, 'r') as file:
        logs = file.readlines()

    suspicious_patterns = {
        'Failed Login': r'failed password',
        'Unauthorized Access': r'403 Forbidden',
        'Multiple Requests': r'GET /path/to/resource',
    }

    alerts = []
    
    # Parse log lines and search for suspicious patterns
    for line in logs:
        for key, pattern in suspicious_patterns.items():
            if re.search(pattern, line):
                alerts.append(f"Alert: {key} detected in log at {datetime.now()}\nLog line: {line}")
    
    # If alerts are found, send an email notification
    if alerts:
        alert_message = "\n".join(alerts)
        send_alert("Security Alert - Suspicious Activity Detected", alert_message)
        print("Security alerts sent!")
    else:
        print("No suspicious activity detected.")

# Example usage
if __name__ == "__main__":
    log_file_path = '/var/log/server.log'
    monitor_logs(log_file_path)
